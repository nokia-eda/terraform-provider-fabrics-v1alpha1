{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "WorkflowGetInputsRespElem": {
        "properties": {
          "ackPrompt": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "schemaPrompt": {
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowId": {
        "properties": {
          "id": {
            "description": "A workflow identifier; these are assigned by the system to a posted workflow.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkflowIdentifier": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowInputData": {
        "items": {
          "$ref": "#/components/schemas/WorkflowInputDataElem"
        },
        "type": "array"
      },
      "WorkflowInputDataElem": {
        "properties": {
          "ack": {
            "description": "acknowledge or reject the input request",
            "type": "boolean"
          },
          "input": {
            "description": "provide a json blob to the workflow",
            "type": "object"
          },
          "subflow": {
            "$ref": "#/components/schemas/WorkflowIdentifier"
          }
        },
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.Fabric": {
        "description": "Fabric is the Schema for the fabrics API",
        "properties": {
          "apiVersion": {
            "default": "fabrics.eda.nokia.com/v1alpha1",
            "pattern": "^fabrics\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to fabrics.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Fabric",
            "pattern": "^Fabric$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Fabric",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric_metadata"
          },
          "spec": {
            "description": "The Fabric defines the desired state of a Fabric resource, enabling the automation and management of data center network fabrics. It includes configurations for IP address allocation pools, network topology roles (Leafs, Spines, SuperSpines, BorderLeafs), inter-switch links, and network protocols (underlay and overlay). The specification allows for detailed control over routing strategies, including ASN allocations for BGP-based protocols, and supports advanced features like BFD.",
            "properties": {
              "borderLeafs": {
                "properties": {
                  "asnPool": {
                    "description": "Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.",
                    "title": "Autonomous System Pool",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "indexallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "UnderlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 1900
                    }
                  },
                  "borderLeafNodeSelector": {
                    "description": "Label selector used to select Toponodes to configure as Borderleaf nodes.",
                    "format": "labelselector",
                    "items": {
                      "type": "string"
                    },
                    "title": "Borderleaf Node Selector",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-category": "NodeSelection",
                      "ui-column-span": 2,
                      "ui-order-priority": 1600,
                      "ui-single-line-group": "LeafBoarderLeaf"
                    }
                  },
                  "routeLeaking": {
                    "description": "Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.",
                    "properties": {
                      "exportPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.",
                        "title": "Export Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.",
                        "title": "Import Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      }
                    },
                    "required": [
                      "exportPolicy",
                      "importPolicy"
                    ],
                    "title": "Route Leaking",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 4,
                      "ui-order-priority": 2500
                    }
                  },
                  "systemPoolIPV4": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv4 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 1700,
                      "ui-single-line-group": "SystemIPs"
                    }
                  },
                  "systemPoolIPV6": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv6 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 1800,
                      "ui-single-line-group": "SystemIPs"
                    }
                  }
                },
                "title": "Borderleafs",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1600
                }
              },
              "fabricSelector": {
                "description": "Selects Fabric resources when connecting multiple Fabrics together. Only one Fabric needs the selector, typically the upper layer (e.g., Superspine) selecting the lower layer (e.g., a pod fabric of leafs and spines). This helps build complete Fabrics in smaller instances of the Fabric resource. This instance selecting other fabrics must also select the InterSwitchLinks connecting itself to the selected Fabrics.",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Fabric Selector",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 2000
                }
              },
              "interSwitchLinks": {
                "properties": {
                  "ipMTU": {
                    "description": "Sets the IP MTU for the DefaultInterface.",
                    "maximum": 9486,
                    "minimum": 1280,
                    "title": "IP MTU",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 600
                    }
                  },
                  "linkSelector": {
                    "description": "Selects TopoLinks to include in this Fabric, creating an ISL resource if both Nodes in the TopoLink are part of this Fabric or a selected Fabric.",
                    "format": "labelselector",
                    "items": {
                      "type": "string"
                    },
                    "title": "Link Selector",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "poolIPV4": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to DefaultInterfaces which are members of the ISLs.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack DefaultInterfaces.",
                    "title": "IPv4 Pool - InterSwitch Link IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "subnetallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "ISLIPs"
                    }
                  },
                  "poolIPV6": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to DefaultInterfaces which are members of the ISLs.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack DefaultInterfaces.",
                    "title": "IPv6 Pool - InterSwitch Link IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "subnetallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 200,
                      "ui-single-line-group": "ISLIPs"
                    }
                  },
                  "qos": {
                    "properties": {
                      "egressPolicy": {
                        "title": "Egress Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "qos.eda.nokia.com",
                              "resource": "egresspolicys",
                              "type": "gvr",
                              "version": "v1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "QoS"
                        }
                      },
                      "ingressPolicy": {
                        "title": "Ingress Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "qos.eda.nokia.com",
                              "resource": "ingresspolicys",
                              "type": "gvr",
                              "version": "v1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "QoS"
                        }
                      }
                    },
                    "title": "QoS",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 500,
                      "ui-single-line-group": "QoS"
                    }
                  },
                  "unnumbered": {
                    "description": "Enables unnumbered interfaces on the ISL; for IPv6, only link-local addresses are used unless a PoolIPV6 is also specified.  DefaultInterfaces in the ISL are added to the DefaultBGPPeer dynamic neighbor list when using an eBGP underlay.",
                    "enum": [
                      "IPV6"
                    ],
                    "title": "Unnumbered",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "Unnumbered"
                    }
                  },
                  "vlanID": {
                    "description": "Configures the provided VLAN on the DefaultInterfaces which are members of the ISLs.",
                    "maximum": 4094,
                    "minimum": 1,
                    "title": "VLAN ID - InterSwitch Link",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-category": "VLAN",
                      "ui-column-span": 1,
                      "ui-order-priority": 300
                    }
                  }
                },
                "title": "InterSwitchLinks",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1700
                }
              },
              "leafs": {
                "properties": {
                  "asnPool": {
                    "description": "Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.",
                    "title": "Autonomous System Pool",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "indexallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "UnderlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 700
                    }
                  },
                  "leafNodeSelector": {
                    "description": "Label selector used to select Toponodes to configure as Leaf nodes.",
                    "format": "labelselector",
                    "items": {
                      "type": "string"
                    },
                    "title": "Leaf Node Selector",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-category": "NodeSelection",
                      "ui-column-span": 2,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "LeafBoarderLeaf"
                    }
                  },
                  "routeLeaking": {
                    "description": "Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.",
                    "properties": {
                      "exportPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.",
                        "title": "Export Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.",
                        "title": "Import Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      }
                    },
                    "required": [
                      "exportPolicy",
                      "importPolicy"
                    ],
                    "title": "Route Leaking",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 4,
                      "ui-order-priority": 2200
                    }
                  },
                  "systemPoolIPV4": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv4 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 500,
                      "ui-single-line-group": "SystemIPs"
                    }
                  },
                  "systemPoolIPV6": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv6 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 600,
                      "ui-single-line-group": "SystemIPs"
                    }
                  }
                },
                "title": "Leafs",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400
                }
              },
              "overlayProtocol": {
                "description": "Set the overlay protocol used",
                "properties": {
                  "bfd": {
                    "description": "Enable BFD on overlay protocol",
                    "properties": {
                      "desiredMinTransmitInt": {
                        "default": 1000000,
                        "description": "The minimum interval in microseconds between transmission of BFD control packets.",
                        "maximum": 100000000,
                        "minimum": 10000,
                        "title": "Transmit Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "TransmitReceiveInterval",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "detectionMultiplier": {
                        "default": 3,
                        "description": "The number of packets that must be missed to declare this session as down.",
                        "maximum": 20,
                        "minimum": 3,
                        "title": "Multiplier",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "MultiplierMinEcho",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "enabled": {
                        "default": false,
                        "description": "Enable Biforward Detection.",
                        "title": "Enabled",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 300
                        }
                      },
                      "minEchoReceiveInterval": {
                        "default": 1000000,
                        "description": "The minimum interval between echo packets the local node can receive in microseconds.",
                        "maximum": 100000000,
                        "minimum": 0,
                        "title": "Minimum Echo Receive Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "MultiplierMinEcho",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "requiredMinReceive": {
                        "default": 1000000,
                        "description": "The minimum interval in microseconds between received BFD control packets that this system should support.",
                        "maximum": 100000000,
                        "minimum": 10000,
                        "title": "Receive Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "TransmitReceiveInterval",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "ttl": {
                        "description": "Sets custom IP TTL or Hop Limit for multi-hop BFD sessions packets. Not appllicable to single-hop BFD sessions.",
                        "maximum": 255,
                        "minimum": 2,
                        "title": "IP TTL/Hop Limit",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 1,
                          "ui-order-priority": 9000,
                          "ui-visible-if": "self.enabled === true"
                        }
                      }
                    },
                    "title": "Overlay Protocol BFD",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 1500,
                      "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                    }
                  },
                  "bgp": {
                    "description": "Overlay specific BGP properties.",
                    "properties": {
                      "autonomousSystem": {
                        "description": "Autonomous System used for iBGP peering session, when protocol is set to IBGP providing an autonomousSystem is required.",
                        "format": "int32",
                        "title": "Autonomous System",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "OverlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 3000,
                          "ui-single-line-group": "AutonomousSystemClusterID",
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "clusterID": {
                        "description": "Sets the cluster ID used by DefaultRouteReflectors, when protocol is set to IBGP providing a clusterID is required.",
                        "title": "Cluster ID",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-category": "OverlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 3100,
                          "ui-single-line-group": "AutonomousSystemClusterID",
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "exportPolicy": {
                        "description": "Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Export Policy",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-category": "OverlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 2800,
                          "ui-single-line-group": "Policy",
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Import Policy",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-category": "OverlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 2900,
                          "ui-single-line-group": "Policy",
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "keychain": {
                        "description": "Keychain to be used for authentication when overlay protocol is IBGP, ignored otherwise",
                        "title": "Keychain",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 1500
                        }
                      },
                      "rrClientNodeSelector": {
                        "description": "Label selector used to select Toponodes to configure as DefaultRouteReflectorClients, these are typically Leaf or Borderleaf nodes.  Used on conjunction with rrNodeSelector in order to configure the DefaultBGPPeers for both the DefaultRouteReflectors and DefaultRouteReflectorClients.",
                        "format": "labelselector",
                        "items": {
                          "type": "string"
                        },
                        "title": "Route Reflector Client Node Selector",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 3400,
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "rrIPAddresses": {
                        "description": "List of route reflector IP addresses not provisioned by this instance of a Fabric resource.  Used with rrClientNodeSelector to configure the DefaultBGPPeers on the selected nodes to peer the list of external route reflector IPs.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Route Reflector IP Addresses",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 3300,
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "rrNodeSelector": {
                        "description": "Label selector used to select Toponodes to configure as DefaultRouteReflectors, these are typically Spine, Superspine or Borderleaf nodes. Used on conjunction with rrClientNodeSelector in order to configure the DefaultBGPPeers for both the DefaultRouteReflectors and DefaultRouteReflectorClients.",
                        "format": "labelselector",
                        "items": {
                          "type": "string"
                        },
                        "title": "Route Reflector Node Selector",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-order-priority": 3200,
                          "ui-visible-if": "spec.overlayProtocol.protocol === \"IBGP\""
                        }
                      },
                      "timers": {
                        "description": "Timer configurations",
                        "properties": {
                          "connectRetry": {
                            "description": "The time interval in seconds between successive attempts to establish a session with a peer.",
                            "maximum": 65535,
                            "minimum": 1,
                            "title": "Connect Retry",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1200
                            }
                          },
                          "holdTime": {
                            "description": "The hold-time interval in seconds that the router proposes to the peer in its OPEN message.",
                            "maximum": 65535,
                            "minimum": 0,
                            "title": "Hold Time",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1000,
                              "ui-single-line-group": "holdtimekeepalive"
                            }
                          },
                          "keepAlive": {
                            "description": "The interval in seconds between successive keepalive messages sent to the peer.",
                            "maximum": 21845,
                            "minimum": 0,
                            "title": "Keep Alive",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1100,
                              "ui-single-line-group": "holdtimekeepalive"
                            }
                          },
                          "minimumAdvertisementInterval": {
                            "description": "The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.",
                            "maximum": 255,
                            "minimum": 1,
                            "title": "Minimum Advertisement Interval",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1300
                            }
                          }
                        },
                        "title": "Timers",
                        "type": "object",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 800
                        }
                      }
                    },
                    "title": "BGP",
                    "type": "object"
                  },
                  "protocol": {
                    "description": "List of routing protocols to used to advertise EVPN routes for overlay services.  When EBGP is used, the BGP properties configured under the spec.underlayProtocol will be used.",
                    "enum": [
                      "IBGP",
                      "EBGP"
                    ],
                    "title": "Protocol",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-category": "OverlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 2600,
                      "ui-single-line-group": "ProtocolAuthentication"
                    }
                  }
                },
                "required": [
                  "protocol"
                ],
                "title": "Overlay Protocol",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1900
                }
              },
              "routeLeaking": {
                "description": "Route leaking controlled by routing policies in and out of the DefaulRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.",
                "properties": {
                  "exportPolicy": {
                    "description": "Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.",
                    "title": "Export Policy",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "routingpolicies.eda.nokia.com",
                          "resource": "policys",
                          "type": "gvr",
                          "version": "v1alpha1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "ImportExport"
                    }
                  },
                  "importPolicy": {
                    "description": "Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.",
                    "title": "Import Policy",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "routingpolicies.eda.nokia.com",
                          "resource": "policys",
                          "type": "gvr",
                          "version": "v1alpha1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 300,
                      "ui-single-line-group": "ImportExport"
                    }
                  }
                },
                "required": [
                  "exportPolicy",
                  "importPolicy"
                ],
                "title": "Route Leaking",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 4,
                  "ui-order-priority": 2100
                }
              },
              "spines": {
                "properties": {
                  "asnPool": {
                    "description": "Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.",
                    "title": "Autonomous System Pool",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "indexallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "UnderlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 1100
                    }
                  },
                  "routeLeaking": {
                    "description": "Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.",
                    "properties": {
                      "exportPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.",
                        "title": "Export Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.",
                        "title": "Import Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      }
                    },
                    "required": [
                      "exportPolicy",
                      "importPolicy"
                    ],
                    "title": "Route Leaking",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 4,
                      "ui-order-priority": 2300
                    }
                  },
                  "spineNodeSelector": {
                    "description": "Label selector used to select Toponodes to configure as Spine nodes.",
                    "format": "labelselector",
                    "items": {
                      "type": "string"
                    },
                    "title": "Spine Node Selector",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-category": "NodeSelection",
                      "ui-column-span": 2,
                      "ui-order-priority": 800,
                      "ui-single-line-group": "SpineSuperSpine"
                    }
                  },
                  "systemPoolIPV4": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv4 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 900,
                      "ui-single-line-group": "SystemIPs"
                    }
                  },
                  "systemPoolIPV6": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv6 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 1000,
                      "ui-single-line-group": "SystemIPs"
                    }
                  }
                },
                "title": "Spines",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 800
                }
              },
              "superSpines": {
                "properties": {
                  "asnPool": {
                    "description": "Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.",
                    "title": "Autonomous System Pool",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "indexallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "UnderlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 1500
                    }
                  },
                  "routeLeaking": {
                    "description": "Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.",
                    "properties": {
                      "exportPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.",
                        "title": "Export Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.",
                        "title": "Import Policy",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-column-span": 2,
                          "ui-order-priority": 300,
                          "ui-single-line-group": "ImportExport"
                        }
                      }
                    },
                    "required": [
                      "exportPolicy",
                      "importPolicy"
                    ],
                    "title": "Route Leaking",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 4,
                      "ui-order-priority": 2400
                    }
                  },
                  "superSpineNodeSelector": {
                    "description": "Label selector used to select Toponodes to configure as Superspine nodes.",
                    "format": "labelselector",
                    "items": {
                      "type": "string"
                    },
                    "title": "Superspine Node Selector",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-category": "NodeSelection",
                      "ui-column-span": 2,
                      "ui-order-priority": 1200,
                      "ui-single-line-group": "SpineSuperSpine"
                    }
                  },
                  "systemPoolIPV4": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv4 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 1300,
                      "ui-single-line-group": "SystemIPs"
                    }
                  },
                  "systemPoolIPV6": {
                    "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                    "title": "IPv6 Pool - System IP",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "core.eda.nokia.com",
                          "resource": "ipallocationpools",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-category": "IPPools",
                      "ui-column-span": 2,
                      "ui-order-priority": 1400,
                      "ui-single-line-group": "SystemIPs"
                    }
                  }
                },
                "title": "Superspines",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1200
                }
              },
              "systemPoolIPV4": {
                "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                "title": "IPv4 Pool - System IP",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "ipallocationpools",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-category": "IPPools",
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "SystemIPs"
                }
              },
              "systemPoolIPV6": {
                "description": "Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.",
                "title": "IPv6 Pool - System IP",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "ipallocationpools",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-category": "IPPools",
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "SystemIPs"
                }
              },
              "underlayProtocol": {
                "description": "Set the underlay protocol used",
                "properties": {
                  "bfd": {
                    "description": "Enable BFD on underlay protocol",
                    "properties": {
                      "desiredMinTransmitInt": {
                        "default": 1000000,
                        "description": "The minimum interval in microseconds between transmission of BFD control packets.",
                        "maximum": 100000000,
                        "minimum": 10000,
                        "title": "Transmit Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "TransmitReceiveInterval",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "detectionMultiplier": {
                        "default": 3,
                        "description": "The number of packets that must be missed to declare this session as down.",
                        "maximum": 20,
                        "minimum": 3,
                        "title": "Multiplier",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "MultiplierMinEcho",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "enabled": {
                        "default": false,
                        "description": "Enable Biforward Detection.",
                        "title": "Enabled",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 300
                        }
                      },
                      "minEchoReceiveInterval": {
                        "default": 1000000,
                        "description": "The minimum interval between echo packets the local node can receive in microseconds.",
                        "maximum": 100000000,
                        "minimum": 0,
                        "title": "Minimum Echo Receive Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "MultiplierMinEcho",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "requiredMinReceive": {
                        "default": 1000000,
                        "description": "The minimum interval in microseconds between received BFD control packets that this system should support.",
                        "maximum": 100000000,
                        "minimum": 10000,
                        "title": "Receive Interval",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-category": "BFD",
                          "ui-column-span": 1,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "TransmitReceiveInterval",
                          "ui-visible-if": "self.enabled === true"
                        }
                      },
                      "ttl": {
                        "description": "Sets custom IP TTL or Hop Limit for multi-hop BFD sessions packets. Not appllicable to single-hop BFD sessions.",
                        "maximum": 255,
                        "minimum": 2,
                        "title": "IP TTL/Hop Limit",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 1,
                          "ui-order-priority": 9000,
                          "ui-visible-if": "self.enabled === true"
                        }
                      }
                    },
                    "title": "Underlay Protocol BFD",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-category": "UnderlayProtocol",
                      "ui-order-priority": 2500
                    }
                  },
                  "bgp": {
                    "description": "Underlay specific BGP properties.",
                    "properties": {
                      "asnPool": {
                        "description": "Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.",
                        "title": "Autonomous System Pool",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "core.eda.nokia.com",
                              "resource": "indexallocationpools",
                              "type": "gvr",
                              "version": "v1"
                            }
                          ],
                          "ui-category": "UnderlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 2300
                        }
                      },
                      "exportPolicy": {
                        "description": "Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Export Policy",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-category": "UnderlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 2100,
                          "ui-single-line-group": "Policy"
                        }
                      },
                      "importPolicy": {
                        "description": "Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.",
                        "items": {
                          "type": "string"
                        },
                        "title": "Import Policy",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-auto-completes": [
                            {
                              "condition": "true",
                              "group": "routingpolicies.eda.nokia.com",
                              "resource": "policys",
                              "type": "gvr",
                              "version": "v1alpha1"
                            }
                          ],
                          "ui-category": "UnderlayProtocol",
                          "ui-column-span": 2,
                          "ui-order-priority": 2200,
                          "ui-single-line-group": "Policy"
                        }
                      },
                      "keychain": {
                        "description": "Keychain to be used for authentication",
                        "title": "Keychain",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 1500
                        }
                      },
                      "timers": {
                        "description": "Timer configurations",
                        "properties": {
                          "connectRetry": {
                            "description": "The time interval in seconds between successive attempts to establish a session with a peer.",
                            "maximum": 65535,
                            "minimum": 1,
                            "title": "Connect Retry",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1200
                            }
                          },
                          "holdTime": {
                            "description": "The hold-time interval in seconds that the router proposes to the peer in its OPEN message.",
                            "maximum": 65535,
                            "minimum": 0,
                            "title": "Hold Time",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1000,
                              "ui-single-line-group": "holdtimekeepalive"
                            }
                          },
                          "keepAlive": {
                            "description": "The interval in seconds between successive keepalive messages sent to the peer.",
                            "maximum": 21845,
                            "minimum": 0,
                            "title": "Keep Alive",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1100,
                              "ui-single-line-group": "holdtimekeepalive"
                            }
                          },
                          "minimumAdvertisementInterval": {
                            "description": "The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.",
                            "maximum": 255,
                            "minimum": 1,
                            "title": "Minimum Advertisement Interval",
                            "type": "integer",
                            "x-eda-nokia-com": {
                              "ui-column-span": 2,
                              "ui-order-priority": 1300
                            }
                          }
                        },
                        "title": "Timers",
                        "type": "object",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 800
                        }
                      }
                    },
                    "title": "BGP",
                    "type": "object"
                  },
                  "protocol": {
                    "description": "List of routing protocols to used between peers of an ISL.  Multiple protocols may be listed, if so multiple protocols will be used.",
                    "items": {
                      "enum": [
                        "EBGP"
                      ],
                      "type": "string"
                    },
                    "title": "Protocol",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-category": "UnderlayProtocol",
                      "ui-column-span": 2,
                      "ui-order-priority": 600
                    }
                  }
                },
                "required": [
                  "bgp",
                  "protocol"
                ],
                "title": "Underlay Protocol",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 1800
                }
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "FabricStatus defines the observed state of Fabric",
            "properties": {
              "borderLeafNodes": {
                "description": "List of border leaf nodes in the Fabric.",
                "items": {
                  "properties": {
                    "node": {
                      "description": "Name of the TopoNode.",
                      "title": "Node",
                      "type": "string"
                    },
                    "operatingSystem": {
                      "description": "Operating system running on the node.",
                      "title": "Operating System",
                      "type": "string"
                    },
                    "operatingSystemVersion": {
                      "description": "Operating system version running on the node.",
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "underlayAutonomousSystem": {
                      "description": "Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.",
                      "format": "int32",
                      "title": "Underlay Autonomous System",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "title": "Border Leaf Nodes",
                "type": "array"
              },
              "health": {
                "description": "Indicates the health score of the Fabric.  The health score of the Fabric is determined by the aggregate health score of the resources emited by the Fabric such as ISL, DefaultRouteReflectors etc.",
                "title": "Health",
                "type": "integer"
              },
              "healthScoreReason": {
                "description": "Indicates the reason for the health score.",
                "title": "Health Score Reason",
                "type": "string"
              },
              "lastChange": {
                "description": "The time when the state of the resource last changed.",
                "format": "date-time",
                "title": "Last Change",
                "type": "string"
              },
              "leafNodes": {
                "description": "List of leaf nodes in the Fabric.",
                "items": {
                  "properties": {
                    "node": {
                      "description": "Name of the TopoNode.",
                      "title": "Node",
                      "type": "string"
                    },
                    "operatingSystem": {
                      "description": "Operating system running on the node.",
                      "title": "Operating System",
                      "type": "string"
                    },
                    "operatingSystemVersion": {
                      "description": "Operating system version running on the node.",
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "underlayAutonomousSystem": {
                      "description": "Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.",
                      "format": "int32",
                      "title": "Underlay Autonomous System",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "title": "Leaf Nodes",
                "type": "array"
              },
              "operationalState": {
                "description": "Operational state of the Fabric.  The operational state of the fabric is determined by monitoring the operational state of the following resources (if applicable): DefaultRouters, ISLs.",
                "title": "Operational State",
                "type": "string"
              },
              "spineNodes": {
                "description": "List of spine nodes in the Fabric.",
                "items": {
                  "properties": {
                    "node": {
                      "description": "Name of the TopoNode.",
                      "title": "Node",
                      "type": "string"
                    },
                    "operatingSystem": {
                      "description": "Operating system running on the node.",
                      "title": "Operating System",
                      "type": "string"
                    },
                    "operatingSystemVersion": {
                      "description": "Operating system version running on the node.",
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "underlayAutonomousSystem": {
                      "description": "Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.",
                      "format": "int32",
                      "title": "Underlay Autonomous System",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "title": "Spine Nodes",
                "type": "array"
              },
              "superSpineNodes": {
                "description": "List of super spine nodes in the Fabric.",
                "items": {
                  "properties": {
                    "node": {
                      "description": "Name of the TopoNode.",
                      "title": "Node",
                      "type": "string"
                    },
                    "operatingSystem": {
                      "description": "Operating system running on the node.",
                      "title": "Operating System",
                      "type": "string"
                    },
                    "operatingSystemVersion": {
                      "description": "Operating system version running on the node.",
                      "title": "Operating System Version",
                      "type": "string"
                    },
                    "underlayAutonomousSystem": {
                      "description": "Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.",
                      "format": "int32",
                      "title": "Underlay Autonomous System",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "title": "Superspine Nodes",
                "type": "array"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.FabricList": {
        "description": "FabricList is a list of fabrics",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.fabrics.v1alpha1.Fabric_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "fabrics.eda.nokia.com",
                  "kind": "Fabric",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.fabrics.v1alpha1.ISL": {
        "description": "ISL is the Schema for the isls API",
        "properties": {
          "apiVersion": {
            "default": "fabrics.eda.nokia.com/v1alpha1",
            "pattern": "^fabrics\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to fabrics.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ISL",
            "pattern": "^ISL$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ISL",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL_metadata"
          },
          "spec": {
            "description": "The ISL enables the configuration and management of direct links between Nodes. This resource allows for specifying IPv4 and IPv6 allocation pools, enabling BFD for fast failure detection, and configuring VLAN IDs for the ISL. It also supports BGP peering between the endpoints, with options for setting autonomous systems, AFI/SAFI configurations, and import/export routing policies.",
            "properties": {
              "bfd": {
                "description": "Enable or disable BFD on the ISL. [default=false]",
                "properties": {
                  "desiredMinTransmitInt": {
                    "default": 1000000,
                    "description": "The minimum interval in microseconds between transmission of BFD control packets.",
                    "maximum": 100000000,
                    "minimum": 10000,
                    "title": "Transmit Interval",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-category": "BFD",
                      "ui-column-span": 1,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "TransmitReceiveInterval",
                      "ui-visible-if": "self.enabled === true"
                    }
                  },
                  "detectionMultiplier": {
                    "default": 3,
                    "description": "The number of packets that must be missed to declare this session as down.",
                    "maximum": 20,
                    "minimum": 3,
                    "title": "Multiplier",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-category": "BFD",
                      "ui-column-span": 1,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "MultiplierMinEcho",
                      "ui-visible-if": "self.enabled === true"
                    }
                  },
                  "enabled": {
                    "default": false,
                    "description": "Enable Biforward Detection.",
                    "title": "Enabled",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-category": "BFD",
                      "ui-column-span": 1,
                      "ui-order-priority": 300
                    }
                  },
                  "minEchoReceiveInterval": {
                    "default": 1000000,
                    "description": "The minimum interval between echo packets the local node can receive in microseconds.",
                    "maximum": 100000000,
                    "minimum": 0,
                    "title": "Minimum Echo Receive Interval",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-category": "BFD",
                      "ui-column-span": 1,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "MultiplierMinEcho",
                      "ui-visible-if": "self.enabled === true"
                    }
                  },
                  "requiredMinReceive": {
                    "default": 1000000,
                    "description": "The minimum interval in microseconds between received BFD control packets that this system should support.",
                    "maximum": 100000000,
                    "minimum": 10000,
                    "title": "Receive Interval",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-category": "BFD",
                      "ui-column-span": 1,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "TransmitReceiveInterval",
                      "ui-visible-if": "self.enabled === true"
                    }
                  },
                  "ttl": {
                    "description": "Sets custom IP TTL or Hop Limit for multi-hop BFD sessions packets. Not appllicable to single-hop BFD sessions.",
                    "maximum": 255,
                    "minimum": 2,
                    "title": "IP TTL/Hop Limit",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-column-span": 1,
                      "ui-order-priority": 9000,
                      "ui-visible-if": "self.enabled === true"
                    }
                  }
                },
                "title": "BFD",
                "type": "object"
              },
              "bgp": {
                "properties": {
                  "afiSAFI": {
                    "description": "Which AFI and SAFI to advertise on the BGP peering session. Options: ipv4unicast, ipv6unicast, l2vpnevpn",
                    "items": {
                      "type": "string"
                    },
                    "title": "AFI SAFI",
                    "type": "array"
                  },
                  "bgpGroup": {
                    "description": "Reference to a DefaultBgpGroup.",
                    "title": "BGP Group",
                    "type": "string"
                  },
                  "enabled": {
                    "default": false,
                    "description": "Enable or disable BGP peering between the two endpoints of the ISL. [default=false]",
                    "title": "Enabled",
                    "type": "boolean"
                  },
                  "exportPolicy": {
                    "description": "Reference to a RoutingPolicy to use when evaluating route exports from the DefaultRouter.",
                    "items": {
                      "type": "string"
                    },
                    "title": "Export Policy",
                    "type": "array"
                  },
                  "importPolicy": {
                    "description": "Reference to a RoutingPolicy to use when evaluating route imports into the DefaultRouter.",
                    "items": {
                      "type": "string"
                    },
                    "title": "Import Policy",
                    "type": "array"
                  },
                  "keychain": {
                    "description": "Keychain to be used for authentication",
                    "title": "Keychain",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2,
                      "ui-order-priority": 1500
                    }
                  },
                  "localInterfaceAS": {
                    "description": "The Autonomous System to configure on the Local Interface.",
                    "format": "int32",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "title": "Local Interface AS",
                    "type": "integer"
                  },
                  "remoteInterfaceAS": {
                    "description": "The Autonomous System to configure on the Remote Interface.",
                    "format": "int32",
                    "maximum": 4294967295,
                    "minimum": 0,
                    "title": "Remote Interface AS",
                    "type": "integer"
                  }
                },
                "required": [
                  "enabled",
                  "localInterfaceAS",
                  "remoteInterfaceAS"
                ],
                "title": "BGP",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-presence-toggle": true
                }
              },
              "ipMTU": {
                "description": "Sets the IP MTU for the local and remote Interfaces",
                "maximum": 9486,
                "minimum": 1280,
                "title": "IP MTU",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-column-span": 2
                }
              },
              "localDefaultRouter": {
                "description": "Reference to the DefautlRouter associated with the local Interface in which the ISL will be provisioned.",
                "title": "Local Default Router",
                "type": "string"
              },
              "localInterface": {
                "description": "Reference to an Interface.",
                "title": "Local Interface",
                "type": "string"
              },
              "poolIPV4": {
                "description": "Reference to an IPv4 allocation pool to use for ISL subnet allocations.",
                "title": "IPv4 Allocation Pool",
                "type": "string"
              },
              "poolIPV6": {
                "description": "Reference to an IPv6 allocation pool to use for ISL subnet allocations.",
                "title": "IPv6 Allocation Pool",
                "type": "string"
              },
              "qos": {
                "properties": {
                  "egressPolicy": {
                    "title": "Egress Policy",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "qos.eda.nokia.com",
                          "resource": "egresspolicys",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "QoS"
                    }
                  },
                  "ingressPolicy": {
                    "title": "Ingress Policy",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-auto-completes": [
                        {
                          "condition": "true",
                          "group": "qos.eda.nokia.com",
                          "resource": "ingresspolicys",
                          "type": "gvr",
                          "version": "v1"
                        }
                      ],
                      "ui-column-span": 2,
                      "ui-order-priority": 400,
                      "ui-single-line-group": "QoS"
                    }
                  }
                },
                "title": "QoS",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "QoS"
                }
              },
              "remoteDefaultRouter": {
                "description": "Reference to the DefautlRouter associated with the remote Interface in which the ISL will be provisioned.",
                "title": "Remote Default Router",
                "type": "string"
              },
              "remoteInterface": {
                "description": "Reference to an Interface",
                "title": "Remote Interface",
                "type": "string"
              },
              "unnumbered": {
                "description": "Enables the use of unnumbered interfaces on the ISL. For IPv6, no IP address are configured on the sub-interface and only the link local address will be used. If any allocation pool is specified for IPv6 that will take precedence and IPs will be assigned to the interfaces.  When using eBGP for an underlay protocol, the DefaultInterfaces which are a part of the ISL will be added to the BGP dynamic neighbor list.",
                "enum": [
                  "IPV6"
                ],
                "title": "Unnumbered",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Unnumbered"
                }
              },
              "vlanID": {
                "description": "Single VLAN tag value between 1-4094.",
                "maximum": 4094,
                "minimum": 1,
                "title": "VLAN ID",
                "type": "integer"
              }
            },
            "required": [
              "localDefaultRouter",
              "localInterface",
              "remoteDefaultRouter",
              "remoteInterface"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ISLStatus defines the observed state of ISL",
            "properties": {
              "health": {
                "description": "Indicates the health score of the ISL",
                "title": "Health",
                "type": "integer",
                "x-eda-nokia-com": {
                  "ui-visible-if": "false"
                }
              },
              "healthScoreReason": {
                "description": "Indicates the reason for the health score",
                "title": "Health Score Reason",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-visible-if": "false"
                }
              },
              "lastChange": {
                "description": "The time when the state of the resource last changed",
                "format": "date-time",
                "title": "Last Change",
                "type": "string"
              },
              "localInterface": {
                "description": "Local Interface",
                "properties": {
                  "IPv4Address": {
                    "description": "Local Interface IPv4 address",
                    "title": "IPv4 Address",
                    "type": "string"
                  },
                  "IPv6Address": {
                    "description": "Local Interface IPv4 address",
                    "title": "IPv6 Address",
                    "type": "string"
                  },
                  "defaultInterface": {
                    "description": "Reference to the DefaulInterface assocaited with the local interface",
                    "title": "Default Interface",
                    "type": "string"
                  },
                  "node": {
                    "description": "Reference to the TopoNode on which the local interface is configured",
                    "title": "Node",
                    "type": "string"
                  }
                },
                "title": "Local Interface",
                "type": "object"
              },
              "operationalState": {
                "description": "Operational state of the ISL",
                "title": "Operational State",
                "type": "string"
              },
              "remoteInterface": {
                "description": "Remote Interface",
                "properties": {
                  "IPv4Address": {
                    "description": "Remote Interface IPv4 address",
                    "title": "IPv4 Address",
                    "type": "string"
                  },
                  "IPv6Address": {
                    "description": "Remote Interface IPv6 address",
                    "title": "IPv6 Address",
                    "type": "string"
                  },
                  "defaultInterface": {
                    "description": "Reference to the DefaulInterface assocaited with the remote interface",
                    "title": "Default Interface",
                    "type": "string"
                  },
                  "node": {
                    "description": "Reference to the TopoNode on which the remote interface is configured",
                    "title": "Node",
                    "type": "string"
                  }
                },
                "title": "Remote Interface",
                "type": "object"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.ISLList": {
        "description": "ISLList is a list of isls",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.fabrics.v1alpha1.ISL_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "fabrics.eda.nokia.com",
                  "kind": "ISL",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.fabrics.v1alpha1.IslPing": {
        "description": "IslPing is the Schema for the islpings API",
        "properties": {
          "apiVersion": {
            "default": "fabrics.eda.nokia.com/v1alpha1",
            "pattern": "^fabrics\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to fabrics.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "IslPing",
            "pattern": "^IslPing$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to IslPing",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPing_metadata"
          },
          "spec": {
            "description": "This workflow is used to ping ISLs (Inter-Switch Links) to verify connectivity within a Fabric.\nIt accepts a list of fabrics, ISLs, or selectors for both to match ISLs,\nand returns the results of the pings, including the status of each ISL.",
            "properties": {
              "count": {
                "default": 1,
                "description": "Count is the number of pings to send.",
                "title": "Count",
                "type": "integer"
              },
              "islSelectors": {
                "description": "Inter-Switch Link Selectors is a list of selectors to execute ISL pings for.\nThis is a list of label expressions, e.g. [\"eda.nokia.com/role=leaf\", \"eda.nokia.com/region=us-west\"].",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Inter-Switch Link Selectors",
                "type": "array"
              },
              "isls": {
                "description": "Inter-Switch Links is a list of named ISL resources to execute ISL pings for.",
                "items": {
                  "type": "string"
                },
                "title": "Inter-Switch Links",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "fabrics.eda.nokia.com",
                      "resource": "isls",
                      "subject": true,
                      "type": "gvr",
                      "version": "v1alpha1"
                    }
                  ]
                }
              },
              "timeoutSeconds": {
                "default": 5,
                "description": "TimeoutSeconds is the timeout for the ping in seconds.",
                "title": "Timeout Seconds",
                "type": "integer"
              }
            },
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "The result of the ISL ping",
            "properties": {
              "details": {
                "description": "Details contains the results of the pings performed for each ISL.\nEach entry in the list corresponds to an ISL that was pinged.",
                "items": {
                  "properties": {
                    "details": {
                      "description": "Details of the ping result, if available.",
                      "properties": {
                        "averageTimeNanoseconds": {
                          "description": "Average time taken for a ping reply.",
                          "format": "int64",
                          "title": "Average Time (ns)",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 200,
                            "ui-single-line-group": "AverageTotal"
                          }
                        },
                        "maxTimeNanoseconds": {
                          "description": "Maximum time taken for a ping reply.",
                          "format": "int64",
                          "title": "Maximum Time (ns)",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "MinMax"
                          }
                        },
                        "minTimeNanoseconds": {
                          "description": "Minimum time taken for a ping reply.",
                          "format": "int64",
                          "title": "Minimum Time (ns)",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "MinMax"
                          }
                        },
                        "received": {
                          "description": "Number of pings received.",
                          "title": "Received",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100,
                            "ui-single-line-group": "SentReceived"
                          }
                        },
                        "sent": {
                          "description": "Number of pings sent.",
                          "title": "Sent",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 50,
                            "ui-single-line-group": "SentReceived"
                          }
                        },
                        "stdDevNanoseconds": {
                          "description": "Standard deviation of time taken for all pings.",
                          "format": "int64",
                          "title": "Standard Deviation (ns)",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300
                          }
                        },
                        "totalTimeNanoseconds": {
                          "description": "Total time taken for all pings.",
                          "format": "int64",
                          "title": "Total Time (ns)",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "AverageTotal"
                          }
                        }
                      },
                      "required": [
                        "received",
                        "sent"
                      ],
                      "title": "Details",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 150
                      }
                    },
                    "error": {
                      "description": "Error message, if the ping failed.",
                      "title": "Error",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 200
                      }
                    },
                    "name": {
                      "description": "Name of the ping result.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 50
                      }
                    },
                    "success": {
                      "description": "Indicates if the ping was successful.",
                      "title": "Success",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100
                      }
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "result": {
                "description": "Result is the overall result of the ping operation.\nIt can be one of the following values:\n- \"Success\": All pings were successful.\n- \"Failed\": No pings were successful.\n- \"PartialSuccess\": Some pings were successful, but not all.",
                "enum": [
                  "Success",
                  "Failed",
                  "PartialSuccess"
                ],
                "title": "Result",
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.IslPingList": {
        "description": "IslPingList is a list of islpings",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPing"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.fabrics.v1alpha1.IslPing_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "fabrics.eda.nokia.com",
                  "kind": "IslPing",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Fabrics Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/fabrics.eda.nokia.com": {
      "get": {
        "description": "list versions available from fabrics.eda.nokia.com",
        "operationId": "getVersionFabricsEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from fabrics.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesFabricsEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for fabrics.eda.nokia.com v1alpha1",
        "operationId": "uiFabricsEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/fabrics": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFabricsEdaNokiaComV1alpha1Fabrics",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.FabricList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fabrics",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/isls": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFabricsEdaNokiaComV1alpha1Isls",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISLList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list isls",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics": {
      "delete": {
        "operationId": "deleteAllFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.FabricList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Fabric in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.FabricList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list fabrics in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Fabric",
        "operationId": "createFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/_deleted": {
      "get": {
        "operationId": "getDeletedFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Fabric that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/{name}": {
      "delete": {
        "description": "delete the specified Fabric",
        "operationId": "deleteFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Fabric to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Fabric.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "name of the Fabric",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Fabric",
        "operationId": "patchFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Fabric",
        "operationId": "replaceFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.Fabric"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/{name}/_revs": {
      "get": {
        "operationId": "getHistoryFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "name of the Fabric to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Fabric.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/{name}/_topology": {
      "get": {
        "operationId": "getTopologyFabricsEdaNokiaComV1alpha1NamespaceFabrics",
        "parameters": [
          {
            "description": "name of the Fabric to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Fabric.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls": {
      "delete": {
        "operationId": "deleteAllFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISLList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of ISL in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISLList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list isls in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a ISL",
        "operationId": "createFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/_deleted": {
      "get": {
        "operationId": "getDeletedFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ISL that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/{name}": {
      "delete": {
        "description": "delete the specified ISL",
        "operationId": "deleteFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the ISL to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified ISL.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "name of the ISL",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a ISL",
        "operationId": "patchFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a ISL",
        "operationId": "replaceFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.ISL"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/{name}/_revs": {
      "get": {
        "operationId": "getHistoryFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "name of the ISL to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced ISL.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/{name}/_topology": {
      "get": {
        "operationId": "getTopologyFabricsEdaNokiaComV1alpha1NamespaceIsls",
        "parameters": [
          {
            "description": "name of the ISL to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced ISL.",
        "tags": [
          "apps"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/islpings": {
      "get": {
        "operationId": "wfListFabricsEdaNokiaComV1alpha1Islpings",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPingList"
                }
              }
            },
            "description": "com.nokia.eda.fabrics.v1alpha1.IslPingList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all IslPing instances.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings": {
      "get": {
        "operationId": "wfListFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPingList"
                }
              }
            },
            "description": "com.nokia.eda.fabrics.v1alpha1.IslPingList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all IslPing instances in this namespace.",
        "tags": [
          "workflows"
        ]
      },
      "post": {
        "description": "create a IslPing",
        "operationId": "wfCreateFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "the namespace scope in which to create the IslPing",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowId"
                }
              }
            },
            "description": "The response for a successful POST workflows request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings/{name}": {
      "delete": {
        "operationId": "wfDeleteFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no data is returned for this response type."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete a IslPing workflow.",
        "tags": [
          "workflows"
        ]
      },
      "get": {
        "operationId": "wfReadFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.fabrics.v1alpha1.IslPing"
                }
              }
            },
            "description": "com.nokia.eda.fabrics.v1alpha1.IslPing"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read the specified IslPing.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings/{name}/_artifacts": {
      "get": {
        "operationId": "wfListArtifactsFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The response for a successful list artifacts request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read list of artifacts generated by a IslPing workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings/{name}/_artifacts/{artifact}": {
      "get": {
        "operationId": "wfReadArtifactFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the artifact to download",
            "in": "path",
            "name": "artifact",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The binary content of the requested artifact."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read artifact generated by a IslPing workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings/{name}/_input": {
      "get": {
        "operationId": "wfListInputFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkflowGetInputsRespElem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List containing specifications for this flow \u0026 subflow's requested input."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get inputs requested by the IslPing.",
        "tags": [
          "workflows"
        ]
      },
      "put": {
        "operationId": "wfSubmitInputFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowInputData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": ""
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Submit input requested by the IslPing.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/islpings/{name}/_logs": {
      "get": {
        "operationId": "wfReadLogsFabricsEdaNokiaComV1alpha1NamespaceIslpings",
        "parameters": [
          {
            "description": "name of the IslPing",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The response for a successful GET logs request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read logs output by the IslPing.",
        "tags": [
          "workflows"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}